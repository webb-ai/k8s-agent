apiVersion: v1
kind: Namespace
metadata:
  name: webbai
  labels:
    name: webbai
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: webbai
  name: resource-collector
  labels:
    app: resource-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resource-collector
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "9090"
      labels:
        app: resource-collector
    spec:
      serviceAccountName: webbai
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "kubernetes.io/arch"
                    operator: In
                    values: ["amd64"]
      containers:
        - image: public.ecr.aws/p5v6t9h8/k8s-resource-collector:v0.4.2
          imagePullPolicy: Always
          name: resource-collector
          env:
            - name: CLIENT_ID
              value: ""
            - name: API_KEY
              value: ""
          command:
            - /app/collector
            - --data-dir # directory to store staged data
            - /app/data
            - --kube-api-qps # max qps from this client to kube api server
            - "20"
            - --kube-api-burst # max burst for throttle from this client to kube api server
            - "30"
            - --traffic-collector-pod-selector
            - app=traffic-collector
            - --traffic-collector-metrics-port
            - "9095"
            - --traffic-collector-server-port
            - "8897"
            - --kafka-bootstrap-servers
            - ""
            - --kafka-polling-interval
            - "5m"
          livenessProbe:
            httpGet:
              path: /healthz
              port: 9091
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 5
          resources:
            requests:
              memory: 1000Mi
              cpu: 300m
            limits:
              memory: 2000Mi
              cpu: 500m
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: webbai
  name: webbai
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: webbai
rules:
  - apiGroups: ["*"]
    resources: ["*"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "list", "watch", "create", "update"]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "get", "list", "watch", "create", "update" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: webbai
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: webbai
subjects:
  - kind: ServiceAccount
    name: webbai
    namespace: webbai
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: traffic-collector
  name: traffic-collector
  namespace: webbai
spec:
  selector:
    matchLabels:
      app: traffic-collector
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: /webbai_metrics
        prometheus.io/port: "9095"
      labels:
        app: traffic-collector
      name: traffic-collector
      namespace: webbai
    spec:
      containers:
        - command:
            - ./worker
            - -i
            - any
            - -port
            - "8897"
            - -metrics-port
            - "9095"
            - -packet-capture
            - libpcap
            - -servicemesh
            - -tls
            - -procfs
            - /hostproc
          image: public.ecr.aws/p5v6t9h8/k8s-traffic-collector:v0.8.3-14-g46594b0
          imagePullPolicy: Always
          name: traffic-collector
          env:
            - name: GOGC
              value: '50'
          ports:
            - containerPort: 8897
              hostPort: 8897
            - containerPort: 9095
              hostPort: 9095
          resources:
            limits:
              cpu: '750m'
              memory: '1Gi'
            requests:
              cpu: '100m'
              memory: '200Mi'
          securityContext:
            capabilities:
              add:
                - NET_RAW
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_PTRACE
                - DAC_OVERRIDE
                - SYS_RESOURCE
              drop:
                - ALL
          volumeMounts:
            - mountPath: /hostproc
              name: proc
              readOnly: true
            - mountPath: /sys
              name: sys
              readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      serviceAccountName: webbai
      terminationGracePeriodSeconds: 0
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
      volumes:
        - hostPath:
            path: /proc
          name: proc
        - hostPath:
            path: /sys
          name: sys
